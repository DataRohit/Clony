# GitHub Actions workflow for automated package releases
# This workflow builds and publishes new package versions when a version tag is pushed
name: Release

# Trigger the workflow only when a version tag (v*) is pushed
# Example tags: v1.0.0, v2.1.3, v0.5.0-beta
on:
    push:
        tags:
            - "v*"

jobs:
    # Main release job that builds and publishes the package
    release:
        # Use latest Ubuntu runner for building
        runs-on: ubuntu-latest

        steps:
            # Step 1: Check out the repository code at the tagged version
            - uses: actions/checkout@v3

            # Step 2: Set up Python environment
            # Using Python 3.10 for building to ensure compatibility
            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: "3.10"

            # Step 3: Install build dependencies
            - name: Install dependencies
              run: |
                  # Upgrade pip to latest version
                  python -m pip install --upgrade pip
                  # Install project in editable mode with dev dependencies
                  python -m pip install -e ".[dev]"
                  # Install build tools for packaging
                  python -m pip install build

            # Step 4: Build source distribution and wheel
            - name: Build package
              run: |
                  python -m build

            # Step 5: Create GitHub Release with built artifacts
            # This step uploads the built distributions and generates release notes
            - name: Create GitHub Release
              uses: softprops/action-gh-release@v1
              with:
                  # Include both source distribution and wheel in the release
                  files: |
                      dist/*.tar.gz
                      dist/*.whl
                  # Automatically generate release notes from commits
                  generate_release_notes: true
              env:
                  # Use repository-specific token for authentication
                  GITHUB_TOKEN: ${{ secrets.CLONY_REPO_TOKEN }}
